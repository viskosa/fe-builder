function App(){}function Service(){this.init()}function Change(){this.parent=document.querySelector(".section"),this.button=document.querySelector(".button__push"),this.button.addEventListener("click",this.changeBg.bind(this))}function HideDiv(){this.parent=document.querySelector(".section"),document.querySelector(".button__click").addEventListener("click",this.hide.bind(this))}App.prototype.now=function(e){var t=e?new Date(e):new Date;return new Date(t.getFullYear(),t.getMonth(),t.getDate()).valueOf()},App.prototype.createDate=function(e,t){if(this.now()>this.now(e)){var n=new Date(e),i=n.getMonth()+1,o=this.getMonth(t,i);return n.getDate()+" "+o+" "+n.getFullYear()}return e.split(" ")[1].slice(0,-3)},App.prototype.ajax=function(e,t,n){var i=new XMLHttpRequest;i.onreadystatechange=function(){4===i.readyState&&200===i.status&&n(i.responseText)},i.open(e,t,n),i.send(null)},App.prototype.recurse=function(e,t,n){for(key in e){if(key==t)return void n(e[key]);e[key]instanceof Object&&this.recurse(e[key],t,n)}},App.prototype.getCookie=function(e){var t=document.cookie,n=t.indexOf(e+"=");if(-1==n)return!1;if(-1!=n){var i=n+e.length+1,o=t.indexOf(";",i);-1==o&&(o=t.length)}var r=t.substring(i,o);return decodeURIComponent(r)},Service.prototype.init=function(){new Change,new HideDiv},window.addEventListener("DOMContentLoaded",function(){new Service}),Change.prototype.changeBg=function(){this.parent.classList.toggle("changeBg")},HideDiv.prototype.hide=function(){this.parent.classList.toggle("hideDiv")};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
